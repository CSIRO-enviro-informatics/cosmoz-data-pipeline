version: "3.6"
services:

  scheduler:
    image: mcuadros/ofelia
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend
    depends_on:
      - cosmoz.email.downloader
      - cosmoz.application
    labels:
      ofelia.job-local.my-sch-job.schedule: "@hourly"
      ofelia.job-local.my-sch-job.command: "echo 'ofelia still running'"
    command: ["daemon", "--docker"]

  cosmoz.influxdb:
    image: influxdb:1.7-alpine
    #ports:
    #  - "8186:8086"
    #  - "8188:8088"
    networks:
      - backend
    hostname: "cosmoz.influxdb"
    volumes:
      # The /var/lib/influxdb dir has subdirs {data, meta, wal} all need to be persisted.
      - timeseriesdb-data:/var/lib/influxdb
      - "./influxdb.conf:/etc/influxdb/influxdb.conf"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - INFLUX_DB=cosmoz
    command: ["influxd", "-config", "/etc/influxdb/influxdb.conf"]

  cosmoz.mongodb:
    image: mvertes/alpine-mongo:latest
    #ports:
    #  - "27018:27017"
    #  - "28017"
    networks:
      - backend
    hostname: "cosmoz.mongodb"
    volumes:
      - documentdb-data:/data/db
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - MONGODB_RUN="/var/run/mongodb"
      - MONGODB_DATA="/var/lib/mongodb"
      - MONGODB_USER="mongodb"
      - MONGODB_IP="0.0.0.0"
      - MONGODB_OPTIONS="--journal"


  visualizer:
    image: chronograf:1.7-alpine
    depends_on:
      - cosmoz.influxdb
    #ports:
    #  - "8888:8888"
    networks:
      - backend
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    command: ["chronograf", "--influxdb-url=http://cosmoz.influxdb:8086"]

  cosmoz.email.downloader:
    image: docker-registry.it.csiro.au/tern-landscapes/cosmoz-email-downloader:v001
    volumes:
      - "email-downloader-res:/root/src/res"
      - "./email_downloader.env:/root/src/.env"
    hostname: "cosmoz.email.downloader"
    depends_on:
      - cosmoz.influxdb
      - cosmoz.mongodb
    environment:
      - PYTHONUNBUFFERED=TRUE
    networks:
      - backend
    command: ["tail", "-f", "/dev/null"]  # By default, this does nothing. It gets scheduled
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.emails-cloud-ingest.no-overlap: "true"
      ofelia.job-exec.emails-cloud-ingest.schedule: "0 30 * * * *" #Hourly at *:30.
      ofelia.job-exec.emails-cloud-ingest.command: "sh -c 'source ./venv/bin/activate && python3 main.py C -d 1'"

  cosmoz.application:
    image: cosmoz/app-rest
    build:
      dockerfile: ./Dockerfile
      context: .
      network: host
    hostname: "cosmoz.application"
    environment:
      - PYTHONUNBUFFERED=TRUE
    depends_on:
      - cosmoz.influxdb
      - cosmoz.mongodb
    ports:
      - "8098:8080"
    networks:
      - backend
    volumes:
      - "./cosmoz_rest_wrapper.env:/usr/local/lib/cosmoz-rest-wrapper/src/.env"
      - "./app_scripts.env:/usr/local/lib/cosmoz-data-pipeline/.env"
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.process-levels.no-overlap: "true"
      ofelia.job-exec.process-levels.schedule: "0 0 2 * * *"  # Daily 2am
      ofelia.job-exec.process-levels.command: "bash -c 'cd /usr/local/lib/cosmoz-data-pipeline && bash process_levels.sh'"
      ofelia.job-exec.get-nmdb-intensities.no-overlap: "true"
      ofelia.job-exec.get-nmdb-intensities.schedule: "0 0 1 * * *"  # Daily 1am
      ofelia.job-exec.get-nmdb-intensities.command: "bash -c 'cd /usr/local/lib/cosmoz-data-pipeline && bash get_nmdb_intensities.sh'"


networks:
  backend:

volumes:
  timeseriesdb-data:
    driver_opts:
      type: none
      device: "${PWD}/tsdb"
      o: bind
  documentdb-data:
    driver_opts:
      type: none
      device: "${PWD}/mgdb"
      o: bind
  email-downloader-res:
    driver: local
    driver_opts:
      type: none
      device: "${PWD}/$HOST_EMAIL_DOWNLOADER_RES_DIR"
      o: bind
