version: "3.6"
services:

  cosmoz.influxdb:
    image: influxdb:1.7-alpine
    #ports:
    #  - "8186:8086"
    #  - "8188:8088"
    networks:
      - backend
    hostname: "cosmoz.influxdb"
    volumes:
      # The /var/lib/influxdb dir has subdirs {data, meta, wal} all need to be persisted.
      - timeseriesdb-data:/var/lib/influxdb
      - "${PWD}/../../influxdb.conf:/etc/influxdb/influxdb.conf"
      - "/var/run/docker.sock:/var/run/docker.sock"
      # - "/etc/localtime:/etc/localtime:ro"
      # - "/etc/timezone:/etc/timezone:ro"
    environment:
      - INFLUX_DB=cosmoz
    command: ["influxd", "-config", "/etc/influxdb/influxdb.conf"]

  cosmoz.mongodb:
    image: mvertes/alpine-mongo:latest
    #ports:
    #  - "27018:27017"
    #  - "28017"
    networks:
      - backend
    hostname: "cosmoz.mongodb"
    volumes:
      - documentdb-data:/data/db
      - "/var/run/docker.sock:/var/run/docker.sock"
      # - "/etc/localtime:/etc/localtime:ro"
      # - "/etc/timezone:/etc/timezone:ro"
    environment:
      - MONGODB_RUN="/var/run/mongodb"
      - MONGODB_DATA="/var/lib/mongodb"
      - MONGODB_USER="mongodb"
      - MONGODB_IP="0.0.0.0"
      - MONGODB_OPTIONS="--journal"

  cosmoz.email.downloader:
    image: docker-registry.it.csiro.au/tern-landscapes/cosmoz-email-downloader:v001
    volumes:
      - "email-downloader-res:/root/src/res"
      # Env files are added in subsequent docker-compose files
      # - "${PWD}/../../email_downloader.env:/root/src/.env"
    hostname: "cosmoz.email.downloader"
    depends_on:
      - cosmoz.influxdb
      - cosmoz.mongodb
    environment:
      - PYTHONUNBUFFERED=TRUE
    networks:
      - backend
    command: ["tail", "-f", "/dev/null"]  # By default, this does nothing. It gets scheduled
    labels:
      ofelia.enabled: "true"
      #ofelia.job-exec.emails-cloud-ingest.no-overlap: "true"
      ofelia.job-exec.emails-cloud-ingest.schedule: "30 * * * *" #Hourly at *:30.
      ofelia.job-exec.emails-cloud-ingest.command: "sh -c 'source ./.venv/bin/activate && python3 main.py C -d 1'"

  cosmoz.pipeline.application:
    image: docker-registry.it.csiro.au/tern-landscapes/cosmoz-pipeline-application:v001
    hostname: "cosmoz.pipeline.application"
    environment:
      - PYTHONUNBUFFERED=TRUE
      - MONGODB_HOST=cosmoz.mongodb
      - MONGODB_PORT=27017
      - INFLUXDB_HOST=cosmoz.influxdb
      - INFLUXDB_PORT=8086
      - METRICS_DIRECTORY=/usr/local/lib/cosmoz-rest-wrapper/metrics
      - SANIC_PROXIES_COUNT=1
    depends_on:
      - cosmoz.influxdb
      - cosmoz.mongodb
    # ports:
    #   - "8098:8080"
    networks:
      - backend
    volumes:
      - "${PWD}/../../metrics:/usr/local/lib/cosmoz-rest-wrapper/metrics"
      # Env files are added in subsequent docker-compose files
      # - "${PWD}/../../cosmoz_rest_wrapper.env:/usr/local/lib/cosmoz-rest-wrapper/src/.env"
      # - "${PWD}/../../app_scripts.env:/usr/local/lib/cosmoz-data-pipeline/.env"
    labels:
      ofelia.enabled: "true"
      #ofelia.job-exec.process-levels.no-overlap: "true"
      ofelia.job-exec.process-levels.schedule: "0 2,14 * * *"  # Daily 2am and 2pm
      ofelia.job-exec.process-levels.command: "bash -c 'cd /usr/local/lib/cosmoz-data-pipeline && bash process_levels.sh'"
      #ofelia.job-exec.get-nmdb-intensities.no-overlap: "true"
      ofelia.job-exec.get-nmdb-intensities.schedule: "0 1,13 * * *"  # Daily 1am and 2pm
      ofelia.job-exec.get-nmdb-intensities.command: "bash -c 'cd /usr/local/lib/cosmoz-data-pipeline && bash get_nmdb_intensities.sh'"
      #ofelia.job-exec.upload-metrics.no-overlap: "true"
      ofelia.job-exec.upload-metrics.schedule: "30 0 * * *"  # Daily 12.30am
      ofelia.job-exec.upload-metrics.command: "bash -c 'cd /usr/local/lib/cosmoz-data-pipeline && bash upload_metrics.sh'"


networks:
  backend:

volumes:
  timeseriesdb-data:
  documentdb-data:
  email-downloader-res:
